// Targeted by JavaCPP version 1.5.3-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class ScalarVisitor extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ScalarVisitor() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ScalarVisitor(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ScalarVisitor(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ScalarVisitor position(long position) {
        return (ScalarVisitor)super.position(position);
    }


  public native @ByVal Status Visit(@Const @ByRef NullScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef BooleanScalar scalar);
  public native @ByVal Status Visit(@Cast("const arrow::Int8Scalar*") @ByRef BaseDate32Scalar scalar);
  public native @ByVal Status Visit(@Const @ByRef StringScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef BinaryScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef LargeStringScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef LargeBinaryScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef FixedSizeBinaryScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef Date64Scalar scalar);
  public native @ByVal Status Visit(@Const @ByRef Date32Scalar scalar);
  public native @ByVal Status Visit(@Const @ByRef Time32Scalar scalar);
  public native @ByVal Status Visit(@Const @ByRef Time64Scalar scalar);
  public native @ByVal Status Visit(@Const @ByRef TimestampScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef DayTimeIntervalScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef MonthIntervalScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef DurationScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef Decimal128Scalar scalar);
  public native @ByVal Status Visit(@Const @ByRef ListScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef LargeListScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef MapScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef FixedSizeListScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef StructScalar scalar);
  public native @ByVal Status Visit(@Const @ByRef DictionaryScalar scalar);
}
